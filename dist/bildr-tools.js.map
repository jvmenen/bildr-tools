{"version":3,"file":"bildr-tools.js","mappings":"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","sources":["webpack://BildrTools/./src/ActionTypes.ts","webpack://BildrTools/./src/Actions.ts","webpack://BildrTools/./src/Debug.ts","webpack://BildrTools/./src/Flows.ts","webpack://BildrTools/./src/Helpers.ts","webpack://BildrTools/webpack/bootstrap","webpack://BildrTools/webpack/runtime/define property getters","webpack://BildrTools/webpack/runtime/hasOwnProperty shorthand","webpack://BildrTools/webpack/runtime/make namespace object","webpack://BildrTools/./src/BildrTools.ts"],"sourcesContent":["import { BildrCacheHelper, ConsoleLog, nameSort } from \"./Helpers\";\r\n\r\n/**\r\n * @public\r\n */\r\nexport class BildrToolsActionTypes {\r\n    static findUsage(actionTypeId: string): void {\r\n        let bildrCache = BildrCacheHelper.createInstance();\r\n        let logToConsole = true;\r\n\r\n        // Create \"Header\" for the results\r\n        let theActionType = bildrCache.actionTypes.find(acT => { return (acT.id == actionTypeId); });\r\n        // found it\r\n        if (theActionType) {\r\n            ConsoleLog(`Action Type \"${theActionType.name}\" is called by:`);\r\n            ConsoleLog(\"\");\r\n        } else {\r\n            ConsoleLog(`Couldn't find Action Type ${actionTypeId} in project!`);\r\n            return;\r\n        }\r\n\r\n        // check flow usage per active page\r\n        bildrCache.activePages.forEach(page => {\r\n            let logPageName = true;\r\n\r\n            // Check usage of Flow in Actions of Flows as nested flow or referenced by an action type argument       \r\n            nameSort(page.ActiveFlows).forEach(flow => {\r\n                flow.Actions.forEach(action => {\r\n                    let logFlowName = true\r\n                    if (action.type == actionTypeId) {\r\n                        logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                        logFlowName = ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, logFlowName);\r\n                        ConsoleLog(\"    Action : \" + action.name);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        ConsoleLog(\"\");\r\n        ConsoleLog(\"THAT'S IT!\");\r\n    }\r\n}\r\n\r\n\r\n","import { ActionHelper, BildrCacheHelper, ConsoleLog, FlowHelper, nameSort, PageHelper } from \"./Helpers\";\r\n\r\n/**\r\n * @public\r\n */\r\nexport class BildrToolsActions {\r\n    /**\r\n     * Search in the actions for use of path on Variables and Elements\r\n     * \r\n     * @param path - any string text. Use * to list all actions that have a path\r\n     * @param exactMatch - should it match exactly. default = false\r\n     */\r\n    static findInPath(path: string, exactMatch: boolean = false): void {\r\n        let bildrCache = BildrCacheHelper.createInstance();\r\n        path = path.trim();\r\n\r\n        // setup the matcher\r\n        let matcher = (value: string) => value.includes(path);\r\n        if (exactMatch) {\r\n            matcher = (value: string) => value == path;\r\n        }\r\n        if (path == \"*\") {\r\n            matcher = (value: string) => value.length > 0;\r\n        }\r\n\r\n        // Create \"Header\" for the results\r\n        ConsoleLog(`Path ${path} with exact match = ${exactMatch} is called by:`);\r\n        ConsoleLog(\"\");\r\n\r\n        // check flow usage per active page\r\n        bildrCache.activePages.forEach(page => {\r\n            let logPageName = true;\r\n\r\n            // Check usage of Flow in Actions of Flows as nested flow or referenced by an action type argument       \r\n            nameSort(page.ActiveFlows).forEach(flow => {\r\n                let logFlowName = true;\r\n                flow.Actions.forEach(action => {\r\n                    action.Arguments.forEach(arg => {\r\n                        // check usage path on variable or element argument\r\n                        checkVariableOrElementPathUsage(arg);\r\n\r\n                        // Check usage of path in Data Collection filters\r\n                        if (arg.argumentType == \"filterset\") {\r\n                            let argFilterset = arg as actionArgumentFilterset;\r\n                            argFilterset.filters?.forEach(filter => {\r\n                                filter.fieldsToFilterArray.forEach(field => {\r\n                                    field.valueToFilterWith.forEach(value => {\r\n                                        checkVariableOrElementPathUsage(value)\r\n                                    })\r\n                                })\r\n                            });\r\n                        }\r\n\r\n                        function checkVariableOrElementPathUsage(arg: actionArgument): void {\r\n                            if (arg.argumentType == \"variable\") {\r\n                                let argVariable = arg as actionArgumentVariable;\r\n                                // \"value\": \"vars.Test.name.reverseString()\",\r\n                                // strip vars.Test. to have the whole path\r\n                                // value contains the combination of variablename and path\r\n                                // since there is no actual need to use path separately in\r\n                                // the Bildr UI (can also be add the the variablename field)\r\n                                let path = argVariable.value;\r\n                                if (!path || path.length < 5) return;\r\n\r\n                                let stripTill = path.indexOf(\".\", 5)\r\n                                if (stripTill < 0) return;\r\n\r\n                                path = path.slice(stripTill + 1);\r\n\r\n                                if (matcher(path)) {\r\n                                    logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                                    logFlowName = ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, logFlowName);\r\n                                    ConsoleLog(\"    Action : \" + action.name);\r\n                                    if (path == \"*\" || exactMatch == false)\r\n                                        ConsoleLog(\"      Path : \" + path);\r\n                                }\r\n                            }\r\n                            if (arg.argumentType == \"element\") {\r\n                                let argVariable = arg as actionArgumentElement;\r\n                                if (argVariable.path && matcher(argVariable.path)) {\r\n                                    logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                                    logFlowName = ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, logFlowName);\r\n                                    ConsoleLog(\"    Action : \" + action.name);\r\n                                    if (path == \"*\" || exactMatch == false)\r\n                                        ConsoleLog(\"      Path : \" + argVariable.path);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        })\r\n        ConsoleLog(\"\");\r\n        ConsoleLog(\"THAT'S IT!\");\r\n    }\r\n    /**\r\n     * Find where variable(s) are used\r\n     * \r\n     * @param variableName - The (partial) name of the variable. Use * to show all variable ussage\r\n     * @param setValue - Show where the variable gets set\r\n     * @param readValue - Show where the variable is read\r\n     * @param exactMatch - Default true, if partial search is required set it to false\r\n     */\r\n    static findVariable(variableName: string, setValue: boolean = true, readValue: boolean = true, exactMatch: boolean = true): void {\r\n        let bildrCache = BildrCacheHelper.createInstance();\r\n        variableName = variableName.trim();\r\n\r\n        // setup the matcher\r\n        let matcher = (value: string) => { return value.includes(variableName) };\r\n        if (exactMatch) {\r\n            matcher = (value: string) => value == variableName;\r\n        }\r\n        if (variableName == \"*\") {\r\n            matcher = (value: string) => true;\r\n        }\r\n\r\n        let ConsoleLog = (text: string, logIt: boolean = true): boolean => {\r\n            if (logIt) console.log(text);\r\n            return true;\r\n        };\r\n\r\n        // Create \"Header\" for the results\r\n        ConsoleLog(`Variable ${variableName} with exact match = ${exactMatch} is used here:`);\r\n        ConsoleLog(\"\");\r\n\r\n        // check flow usage per active page\r\n        bildrCache.activePages.forEach(page => {\r\n            let logPageName = true;\r\n            // Check usage of Flow in Actions of Flows as nested flow or referenced by an action type argument       \r\n            nameSort(page.ActiveFlows).forEach(flow => {\r\n                let logFlowName = true;\r\n                flow.Actions.forEach(action => {\r\n                    action.Arguments.forEach(arg => {\r\n                        if (setValue && arg.argumentType == \"static.text\" && arg.thisIsAVariableName == true) {\r\n                            let argVariable = arg as actionArgumentStaticText;\r\n                            if (argVariable.value && matcher(argVariable.value)) {\r\n                                logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                                logFlowName = ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, logFlowName);\r\n                                ConsoleLog(\"    Set in Action : \" + action.name);\r\n                                if (variableName == \"*\") ConsoleLog(\"      Variable : \" + argVariable.value);\r\n                            }\r\n                        }\r\n\r\n                        if (readValue) {\r\n                            ({ pageNameLogged: logPageName, flowNameLogged: logFlowName } = handleArgVariable(arg, action, logPageName, page, logFlowName, flow));\r\n                        }\r\n\r\n                        // Check usage of variable in Data Collection filters\r\n                        if (readValue && arg.argumentType == \"filterset\") {\r\n                            let argFilterset = arg as actionArgumentFilterset;\r\n                            argFilterset.filters?.forEach(filter => {\r\n                                filter.fieldsToFilterArray.forEach(field => {\r\n                                    field.valueToFilterWith.forEach(value => {\r\n                                        ({ pageNameLogged: logPageName, flowNameLogged: logFlowName } = handleArgVariable(value, action, logPageName, page, logFlowName, flow));\r\n                                    })\r\n                                })\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        })\r\n        ConsoleLog(\"\");\r\n        ConsoleLog(\"THAT'S IT!\");\r\n\r\n        function handleArgVariable(arg: actionArgument, action: ActionHelper, pageNameLogged: boolean, page: PageHelper, flowNameLogged: boolean, flow: FlowHelper) {\r\n            if (arg.argumentType == \"variable\") {\r\n                let argVariable = arg as actionArgumentVariable;\r\n                if (argVariable.variableName && matcher(argVariable.variableName)) {\r\n\r\n                    pageNameLogged = ConsoleLog(\"Page : \" + page.name, pageNameLogged);\r\n                    flowNameLogged = ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, flowNameLogged);\r\n                    ConsoleLog(\"    Used in Action : \" + action.name);\r\n                    if (variableName == \"*\") ConsoleLog(\"      Variable : \" + argVariable.variableName);\r\n                }\r\n            }\r\n            return { pageNameLogged, flowNameLogged };\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { BildrCacheHelper } from \"./Helpers\";\r\n\r\n// Stubs which will not be part of the output javascript\r\ndeclare var window: {\r\n    orgQAFunc: typeof QueueAction,\r\n    QueueAction: typeof QueueAction\r\n}\r\n\r\n\r\n/**\r\n * If you want both Flows and actions use: Flows | Actions\r\n * @public\r\n */\r\nexport enum ActionsToShowEnum {\r\n    Flows = 1 << 0,\r\n    Actions = 1 << 1,\r\n    BildrActions = 1 << 2,\r\n    MouseActions = 1 << 3,\r\n};\r\n\r\n/**\r\n * @public\r\n */\r\nexport class BildrToolsDebug {\r\n    private static _StepMode: boolean = false;\r\n\r\n    static ActionsToShow: ActionsToShowEnum = ActionsToShowEnum.Flows;\r\n\r\n    static ShowAllVariables(): void {\r\n\r\n        function frmsRecursive(brwFrm: brwForm) {\r\n            if (brwFrm && brwFrm.form && brwFrm.form.name) {\r\n                console.log(`Variables of Page: ${brwFrm.form.name}`);\r\n            }\r\n            let brwFrmVars = brwFrm._vars;\r\n            if (brwFrmVars) {\r\n                console.log(brwFrmVars);\r\n                if (brwFrm.cBrwForms) {\r\n                    brwFrm.cBrwForms.forEach(frm => {\r\n                        frmsRecursive(frm);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        frmsRecursive(brwFormRoot);\r\n    }\r\n\r\n    static Start(): void\r\n    static Start(breakBeforActionId?: actId): void {\r\n        if (!window.orgQAFunc) { window.orgQAFunc = QueueAction; }\r\n\r\n        window.QueueAction = function (a: action, wait: boolean, parentQAction: any, brwObj: any, params: any, isThread: boolean, qName: string, bildrCache: BildrDBCache, addToQueue: boolean) {\r\n            let showFlows = (BildrToolsDebug.ActionsToShow & ActionsToShowEnum.Flows) === ActionsToShowEnum.Flows;\r\n            let showActions = (BildrToolsDebug.ActionsToShow & ActionsToShowEnum.Actions) === ActionsToShowEnum.Actions;\r\n            let showBildrActions = (BildrToolsDebug.ActionsToShow & ActionsToShowEnum.BildrActions) === ActionsToShowEnum.BildrActions;\r\n            let showMouseActions = (BildrToolsDebug.ActionsToShow & ActionsToShowEnum.MouseActions) === ActionsToShowEnum.MouseActions;\r\n\r\n            if (a) {\r\n                // V3gKt5FZRECIDMudjBbi3g = Action - Mouseenter - Element\r\n                // AGTUwIokUuQgXEgNW6mnA = Action - Mouse Leave Page\r\n                // CAGTUwIokUuQgXEgNW6mnA = Action - Mouse Leave Page\r\n                let isMouseEvent = (a.id == \"V3gKt5FZRECIDMudjBbi3g\" || a.id == \"AGTUwIokUuQgXEgNW6mnA\" || a.id == \"CAGTUwIokUuQgXEgNW6mnA\")\r\n                let isFlow = (a.type == \"68\");\r\n\r\n                // Show only flows\r\n                if ((isMouseEvent && showMouseActions) || (isFlow && showFlows) || (!isMouseEvent && !isFlow && showActions)) {\r\n                    // is it a project action?\r\n                    let act = undefined;\r\n                    if (a.id && !showBildrActions) {\r\n                        let cache = BildrCacheHelper.createInstance();\r\n                        act = cache.actions.find(act => { return act.id == a.id })\r\n                    }\r\n\r\n                    if (act != undefined || showBildrActions) {\r\n                        let type = isFlow ? \"Flow  \" : \"Action\";\r\n                        let indent = isFlow ? \"\" : \"  --\";\r\n                        console.log(`${type}: ${a.id} ${indent}  \"${a.name}\"`);\r\n\r\n                        if (BildrToolsDebug._StepMode || (breakBeforActionId && a.id == breakBeforActionId)) {\r\n                            BildrToolsDebug._StepMode = true;\r\n                            debugger;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            window.orgQAFunc.call(this, a, wait, parentQAction, brwObj, params, isThread, qName, bildrCache, addToQueue);\r\n        }\r\n        window.QueueAction.prototype = window.orgQAFunc.prototype;\r\n        window.QueueAction.prototype.constructor = QueueAction;\r\n    }\r\n\r\n    static Stop(): void {\r\n        if (window.orgQAFunc) { window.QueueAction = window.orgQAFunc; }\r\n    }\r\n\r\n    static StepModeOff(): void {\r\n        BildrToolsDebug._StepMode = false;\r\n    }\r\n}","import { BildrCacheHelper, ConsoleLog, nameSort } from \"./Helpers\";\r\n\r\n/**\r\n * @public\r\n */\r\nexport class BildrToolsFlows {\r\n\r\n    static findUnusedFlows(skipAutoSave = true): void {\r\n        let bildrCache = BildrCacheHelper.createInstance();\r\n        const activePages = nameSort(bildrCache.activePages);\r\n\r\n        // create \"header\" for the results\r\n        console.log(`Checking ${bildrCache.activeFlows.length} flows.`);\r\n        console.log(\"You'll see 'That's it!' when checking is finished.\");\r\n        console.log(\"\");\r\n        if (skipAutoSave) {\r\n            console.log(\"Looking for Unused flows (skipping unused 'Auto Save')\");\r\n        } else {\r\n            console.log(\"Looking for All unused flows\");\r\n        }\r\n        console.log(\"\");\r\n\r\n        activePages.forEach(page => {\r\n            let logPageName = true;\r\n            nameSort(page.ActiveFlows).forEach(flow => {\r\n                if (skipAutoSave && flow.name.includes(\"Auto Save\")) { return; }\r\n\r\n                if (BildrToolsFlows.findUsageOfFlow(flow.id, false) == false) {\r\n                    logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                    console.log(\"  Flow : \" + flow.name);\r\n                }\r\n            });\r\n        });\r\n        console.log(\"\");\r\n        console.log(\"THAT'S IT!\");\r\n    }\r\n\r\n    static findUsageOfFlow(flowId: actId, logToConsole: boolean = true): boolean {\r\n        let bildrCache = BildrCacheHelper.createInstance();\r\n        const strFlowId = flowId.toString();\r\n\r\n        // for easy reference\r\n        let isUsed = false;\r\n\r\n        // Create \"Header\" for the results\r\n        let flow = bildrCache.activeFlows.find(flow => { return (flow.id == flowId); });\r\n        // found it\r\n        if (flow) {\r\n            if (flow.Page) {\r\n                ConsoleLog(`Flow \"${flow.name}\" on page \"${flow.Page.name}\" is called by:`, logToConsole);\r\n            } else {\r\n                ConsoleLog(`Couldn't find page for flowID ${flowId} in project!`, logToConsole)\r\n            }\r\n            ConsoleLog(\"\", logToConsole);\r\n        } else {\r\n            ConsoleLog(`Couldn't find flowID ${flowId} in project!`, logToConsole);\r\n            return false;\r\n        }\r\n\r\n        // check flow usage per active page\r\n        bildrCache.activePages.forEach(page => {\r\n            let logPageName = logToConsole;\r\n            // Check usage of Flow in Actions of page.Flows         \r\n            nameSort(page.ActiveFlows).forEach(flow => {\r\n                flow.Actions.forEach(action => {\r\n                    // as nested flow?\r\n                    let asNestedFlow = action.id.toString().endsWith(strFlowId);\r\n                    if (asNestedFlow) {\r\n                        isUsed = true;\r\n                        logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                        ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, logToConsole);\r\n                        ConsoleLog(\"    as nested flow\", logToConsole);\r\n                    } else\r\n                    // or referenced by an action type argument\r\n                    {\r\n                        action.Arguments.forEach(arg => {\r\n                            if (arg.argumentType == \"static.actions\") {\r\n                                let argumentStatic = arg as actionArgumentStaticActions\r\n                                if (argumentStatic.type == \"static.actions\" && argumentStatic.value?.endsWith(strFlowId)) {\r\n                                    isUsed = true;\r\n                                    logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                                    ConsoleLog(`  Flow : ${flow.name} (id: ${flow.id})`, logToConsole);\r\n                                    ConsoleLog(\"    Action : \" + action.name, logToConsole);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n\r\n            nameSort(page.ActiveElements).forEach(element => {\r\n                let logElement = logToConsole;\r\n                let eventsUsingFlow = element.opts.events.filter(item => { return item.actID && item.actID.toString().endsWith(strFlowId); });\r\n                eventsUsingFlow.forEach(theEvent => {\r\n                    isUsed = true;\r\n                    logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n\r\n                    logElement = ConsoleLog(\"  Element : \" + element.name, logElement);\r\n                    ConsoleLog(\"    Event : \" + theEvent.code, logToConsole);\r\n                });\r\n            });\r\n\r\n            // Check usage of flow in Page Events (Page Flows and Root Page Flows attributes)\r\n            let inPageEvents = [];\r\n            // Page Flows\r\n            if (page.opts.autoSaveActionID?.toString().endsWith(strFlowId)) {\r\n                inPageEvents.push(\"Auto-Save Flow\");\r\n            }\r\n            if (page.opts.onLoadAct?.toString().endsWith(strFlowId)) {\r\n                inPageEvents.push(\"Page Load Flow\");\r\n            }\r\n            // Root Page Flows\r\n            if (page.opts.notConnectedActID?.toString().endsWith(strFlowId)) {\r\n                inPageEvents.push(\"Flow to run when connection is lost\");\r\n            }\r\n            if (page.opts.reConnectedActID?.toString().endsWith(strFlowId)) {\r\n                inPageEvents.push(\"Flow to run when connection is re-established\");\r\n            }\r\n            if (page.opts.notAuthenticatedActID?.toString().endsWith(strFlowId)) {\r\n                inPageEvents.push(\"Flow to run when authentication is lost\");\r\n            }\r\n            if (page.opts.newRevisionActID?.toString().endsWith(strFlowId)) {\r\n                inPageEvents.push(\"Flow to Run When Revision is Out of Date\");\r\n            }\r\n            if (inPageEvents.length > 0) {\r\n                isUsed = true;\r\n                logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                ConsoleLog(\"  Element : Page Body\", logToConsole);\r\n                inPageEvents.forEach(theEvent => {\r\n                    ConsoleLog(\"    Event : \" + theEvent, logToConsole);\r\n                });\r\n            }\r\n\r\n            if (page.opts.resonanceDataListeners) {\r\n                let dataListenersUsingFlow = page.opts.resonanceDataListeners.filter(item => { return item.actID && item.actID.toString().endsWith(strFlowId); });\r\n                if (dataListenersUsingFlow.length > 0) {\r\n                    isUsed = true;\r\n                    logPageName = ConsoleLog(\"Page : \" + page.name, logPageName);\r\n                    ConsoleLog(\"  Element : Page Body\", logToConsole);\r\n                    ConsoleLog(`    Used by ${dataListenersUsingFlow.length} Data Listener(s)`, logToConsole);\r\n                }\r\n            }\r\n        });\r\n        ConsoleLog(\"\", logToConsole);\r\n        ConsoleLog(\"THAT'S IT!\", logToConsole);\r\n\r\n        return isUsed;\r\n    }\r\n\r\n    static findUsageOfDeletedFlows(): void {\r\n        let bildrCache = BildrCacheHelper.createInstance();\r\n        // for easy reference\r\n\r\n        function isDeletedFlow(flowId: actId) {\r\n            return bildrCache.deletedFlows.find(item => item.id.toString().endsWith(flowId.toString())) != undefined;\r\n        }\r\n\r\n        // Check usage of Flow in Actions of Flows as nested flow or referenced by an action type argument\r\n        bildrCache.activeFlows.forEach(flow => {\r\n            if (flow.opts && flow.opts.arguments) {\r\n                let actionsArray = flow.opts.arguments.find(item => { return item.name == \"actionsArray\" });\r\n                if (actionsArray) {\r\n                    let argumentStaticArray = actionsArray as actionArgumentActionsArray\r\n                    argumentStaticArray.value?.forEach(actionRef => {\r\n                        // Nested flow?\r\n                        if (actionRef.id && isDeletedFlow(actionRef.id)) {\r\n                            let page = bildrCache.pages.find(item => { return item.id == flow.formID });\r\n                            if (page) {\r\n                                console.log(`Page : ${page.name}`);\r\n                                console.log(`  Flow : ${flow.name} (id: ${flow.id})`);\r\n                                const deletedFlowName = bildrCache.deletedFlows.find(item => item && item.id.toString().endsWith(actionRef.id.toString()))\r\n                                console.log(\"    as nested flow : \" + deletedFlowName ? deletedFlowName : actionRef.id);\r\n                            }\r\n                        } else {\r\n                            let action = bildrCache.actions.find(item => { return (item.id == actionRef.id) });\r\n\r\n                            if (action && action.opts && action.opts.arguments) {\r\n                                let hasFlowRef = action.opts.arguments.find(arg => {\r\n                                    return (arg.argumentType == \"static.actions\" && (arg as actionArgumentStaticActions).value && isDeletedFlow((arg as actionArgumentStaticActions).value!));\r\n                                })\r\n                                if (hasFlowRef) {\r\n                                    let page = bildrCache.pages.find(item => { return item.id == flow.formID });\r\n                                    if (page) {\r\n                                        console.log(`Page : ${page.name}`);\r\n                                        console.log(`  Flow : ${flow.name} (id: ${flow.id})`);\r\n                                        console.log(`    Action : ${action.name}`);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                };\r\n            };\r\n        });\r\n        // Check usage of flow in Page Events (Page Flows and Root Page Flows attributes)\r\n        bildrCache.activePages.forEach(page => {\r\n            // Flatten active elements because the elements don't get flagged as deleted although \r\n            // they are nog part of the page any more. Checks should only be done on active\r\n            // elements.\r\n            var objsTreeFlattend = Array<element>();\r\n\r\n            function flattenElements(items: element[] | undefined) {\r\n                if (items != undefined) {\r\n                    items.forEach(item => {\r\n                        flattenElements(item.items)\r\n                        objsTreeFlattend.push(item);\r\n                    })\r\n                }\r\n            }\r\n\r\n            flattenElements(page.objsTree);\r\n\r\n            // Check usage of flow in Elements Events\r\n            nameSort(objsTreeFlattend).forEach(element => {\r\n                if (element.opts && element.opts.events) {\r\n                    let eventsUsingFlow = element.opts.events.filter(item => { return item.actID && isDeletedFlow(item.actID) });\r\n                    eventsUsingFlow.forEach(theEvent => {\r\n                        let page = bildrCache.pages.find(item => { return item.id == element.formID });\r\n                        if (page) {\r\n                            console.log(\"Page : \" + page.name);\r\n                            console.log(\"  Element : \" + element.name);\r\n                            console.log(\"    Event : \" + theEvent.code);\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n\r\n\r\n            let inPageEvents = []\r\n            if (page.opts) {\r\n                // Page Flows\r\n                if (page.opts.autoSaveActionID && isDeletedFlow(page.opts.autoSaveActionID)) {\r\n                    inPageEvents.push(\"Auto-Save Flow\");\r\n                }\r\n                if (page.opts.onLoadAct && isDeletedFlow(page.opts.onLoadAct)) {\r\n                    inPageEvents.push(\"Page Load Flow\");\r\n                }\r\n                // Root Page Flows\r\n                if (page.opts.notConnectedActID && isDeletedFlow(page.opts.notConnectedActID)) {\r\n                    inPageEvents.push(\"Flow to run when connection is lost\");\r\n                }\r\n                if (page.opts.reConnectedActID && isDeletedFlow(page.opts.reConnectedActID)) {\r\n                    inPageEvents.push(\"Flow to run when connection is re-established\");\r\n                }\r\n                if (page.opts.notAuthenticatedActID && isDeletedFlow(page.opts.notAuthenticatedActID)) {\r\n                    inPageEvents.push(\"Flow to run when authentication is lost\");\r\n                }\r\n                if (page.opts.newRevisionActID && isDeletedFlow(page.opts.newRevisionActID)) {\r\n                    inPageEvents.push(\"Flow to Run When Revision is Out of Date\");\r\n                }\r\n                if (inPageEvents.length > 0) {\r\n                    console.log(\"Page : \" + page.name);\r\n                    console.log(\"  Element : Page Body\");\r\n                    inPageEvents.forEach(theEvent => {\r\n                        console.log(\"    Event : \" + theEvent);\r\n                    })\r\n                }\r\n\r\n                if (page.opts.resonanceDataListeners) {\r\n                    let dataListenersUsingFlow = page.opts.resonanceDataListeners.filter(item => { return item.actID && isDeletedFlow(item.actID) });\r\n                    if (dataListenersUsingFlow.length > 0) {\r\n                        console.log(\"Page : \" + page.name);\r\n                        console.log(\"  Element : Page Body\");\r\n                        console.log(`    Used by ${dataListenersUsingFlow.length} Data Listener(s)`);\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        console.log(\"\");\r\n        console.log(\"THAT'S IT!\");\r\n    }\r\n\r\n    static getFlowWithActions(flowId: string): void {\r\n        let cache = BildrCacheHelper.createInstance();\r\n        let flow = cache.activeFlows.find(flow => {\r\n            return (flow.id && flow.id.toString() == flowId);\r\n        });\r\n\r\n        if (flow == undefined) {\r\n            console.log(\"flow not found\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"Flow found:\");\r\n        console.log(flow);\r\n        console.log(\"Actions:\");\r\n\r\n        if (flow.opts && flow.opts.arguments) {\r\n            let actionsArray = flow.opts.arguments.find(item => { return item.name == \"actionsArray\"; });\r\n            if (actionsArray) {\r\n                let argumentActionsArray = actionsArray as actionArgumentActionsArray;\r\n                argumentActionsArray.value?.forEach(actionRef => {\r\n                    // Used in an argument of an action type?\r\n                    let action = cache.actions.find(item => { return (item.id.toString() == actionRef.id.toString()); });\r\n\r\n                    if (action) {\r\n                        console.log(action);\r\n                    }\r\n                })\r\n            };\r\n        }\r\n    }\r\n}\r\n","const groupBy = <T, K extends keyof any>(list: T[], getKey: (item: T) => K) =>\r\n    list.reduce((previous, currentItem) => {\r\n        const group = getKey(currentItem);\r\n        if (!previous[group]) previous[group] = [];\r\n        previous[group].push(currentItem);\r\n        return previous;\r\n    }, {} as Record<K, T[]>);\r\n\r\nexport const nameSort = <T extends { name: string }>(list: Array<T>) => {\r\n    return list.sort((a, b) => { return ('' + a.name).localeCompare(b.name) });\r\n}\r\n\r\nexport const ConsoleLog = (text: string, logIt: boolean = true): boolean => {\r\n    if (logIt) console.log(text);\r\n    return false;\r\n};\r\n\r\nclass CacheItem {\r\n    name: string;\r\n    exec: Function;\r\n    value: any;\r\n    nullDefault: any;\r\n\r\n    public constructor(name: string, execFn: Function, initValue: any) {\r\n        this.name = name;\r\n        this.exec = execFn;\r\n        this.nullDefault = initValue;\r\n        this.clear();\r\n    }\r\n\r\n    clear(): void {\r\n        this.value == null;\r\n    }\r\n\r\n    getValue<T>() {\r\n        if (this.value == null) {\r\n            this.value = this.exec() as T;\r\n        }\r\n        return this.value ? this.value as T : this.nullDefault as T;\r\n    }\r\n}\r\nexport class CacheHelper {\r\n    cache: CacheItem[] = [];\r\n\r\n    public register<T>(variableName: string, execFn: () => T, initValue: T) {\r\n        if (this.cache.find(item => item.name == variableName)) {\r\n            throw new Error(`VariableName '${variableName}' already registered.`);\r\n        }\r\n        this.cache.push(new CacheItem(variableName, execFn, initValue));\r\n    }\r\n\r\n    public getValue<T>(variableName: string) {\r\n        let cacheItem = this.cache.find(item => item.name == variableName);\r\n        if (cacheItem) {\r\n            return cacheItem.getValue<T>();\r\n        }\r\n        throw new Error(`VariableName '${variableName}' is not registered.`);\r\n    }\r\n\r\n    public clear() {\r\n        this.cache.forEach(item => item.clear())\r\n    }\r\n}\r\n\r\nexport class BildrCacheHelper {\r\n    static createInstance = () => { return new BildrCacheHelper(true) };\r\n\r\n    bildrCache: BildrDBCache;\r\n    cache: CacheHelper;\r\n\r\n    public constructor(forSelectedBildr: boolean);\r\n    public constructor(projectID: string, revisionID: string);\r\n    public constructor(...myarray: any[]) {\r\n        if (myarray.length === 1) {\r\n            this.bildrCache = BildrDBCacheGet(myarray[0], \"\", \"\", null)!;\r\n        } else if (myarray.length === 2) {\r\n            this.bildrCache = BildrDBCacheGet(false, myarray[0], myarray[1], null)!;\r\n        } else {\r\n            this.bildrCache = BildrDBCacheGet(true, \"\", \"\", null)!;\r\n        }\r\n\r\n        this.cache = new CacheHelper()\r\n        this.cache.register(\"actionsGroupedByFormID\",\r\n            () => groupBy<ActionHelper, string>(this.actions, act => act.formID),\r\n            groupBy<ActionHelper, string>([], () => \"\"));\r\n\r\n        this.cache.register(\"actions\",\r\n            () => this.bildrCache.actions.recs.map(act => new ActionHelper(act, this)),\r\n            Array<ActionHelper>());\r\n\r\n        this.cache.register(\"flows\",\r\n            () => this.actions.filter(action => action.type == \"68\").map(flw => new FlowHelper(flw, this)),\r\n            Array<FlowHelper>());\r\n\r\n        this.cache.register(\"elements\",\r\n            () => this.bildrCache.elements.recs,\r\n            Array<element>());\r\n\r\n        this.cache.register(\"pages\",\r\n            () => this.bildrCache.forms.recs.map(frm => new PageHelper(frm, this)),\r\n            Array<PageHelper>());\r\n\r\n        this.cache.register(\"actionTypes\",\r\n            () => this.bildrCache.actionsTypes.recs,\r\n            Array<PageHelper>());\r\n\r\n        this.cache.register(\"activePages\",\r\n            () => this.pages.filter(item => item.deleted == 0 && item.opts.archived != true),\r\n            Array<PageHelper>());\r\n\r\n        this.cache.register(\"activeFlows\",\r\n            () => this.flows.filter(flow => flow.deleted == 0),\r\n            Array<FlowHelper>());\r\n\r\n        this.cache.register(\"deletedFlows\",\r\n            () => this.flows.filter(flow => flow.deleted != 0),\r\n            Array<FlowHelper>());\r\n\r\n        this.cache.register(\"activeFlowsGroupedByFormID\",\r\n            () => groupBy<FlowHelper, string>(this.activeFlows, f => f.formID),\r\n            groupBy<FlowHelper, string>([], () => \"\"));\r\n\r\n        this.cache.register(\"activeElements\",\r\n            () => this.elements.filter(item => item.deleted == 0),\r\n            Array<element>());\r\n\r\n    }\r\n    get actions() {\r\n        return this.cache.getValue<ActionHelper[]>(\"actions\")\r\n    }\r\n    get flows() {\r\n        return this.cache.getValue<FlowHelper[]>(\"flows\")\r\n    }\r\n    get elements() {\r\n        return this.cache.getValue<element[]>(\"elements\")\r\n    }\r\n    get pages() {\r\n        return this.cache.getValue<PageHelper[]>(\"pages\")\r\n    }\r\n    get actionTypes() {\r\n        return this.cache.getValue<actionType[]>(\"actionTypes\")\r\n    }\r\n    get activePages() {\r\n        return this.cache.getValue<PageHelper[]>(\"activePages\")\r\n    }\r\n    get activeFlows() {\r\n        return this.cache.getValue<FlowHelper[]>(\"activeFlows\")\r\n    }\r\n    get deletedFlows() {\r\n        return this.cache.getValue<FlowHelper[]>(\"deletedFlows\")\r\n    }\r\n    get activeFlowsGroupedByFormID() {\r\n        return this.cache.getValue<Record<string, FlowHelper[]>>(\"activeFlowsGroupedByFormID\")\r\n    }\r\n    get actionsGroupedByFormID() {\r\n        return this.cache.getValue<Record<string, ActionHelper[]>>(\"actionsGroupedByFormID\");\r\n    }\r\n    get activeElements() {\r\n        return this.cache.getValue<element[]>(\"activeElements\")\r\n    }\r\n}\r\n\r\nexport class PageHelper implements form {\r\n    opts: formOpts;\r\n    objsTree?: element[] | undefined;\r\n    actions: action[];\r\n    deleted: number;\r\n    name: string;\r\n    id: string | number;\r\n\r\n    protected bildrCache: BildrCacheHelper;\r\n\r\n    public constructor(form: form, bildrCache: BildrCacheHelper) {\r\n        this.opts = form.opts;\r\n        this.objsTree = form.objsTree;\r\n        this.actions = form.actions;\r\n        this.deleted = form.deleted;\r\n        this.name = form.name;\r\n        this.id = form.id\r\n        this.bildrCache = bildrCache;\r\n    }\r\n\r\n    public get ActiveFlows() {\r\n        let flows = this.bildrCache.activeFlowsGroupedByFormID[this.id.toString()];\r\n        return flows ? flows : Array<FlowHelper>();\r\n    }\r\n\r\n    public get ActiveElements() {\r\n        let formObjsTreeFlattend = Array<element>();\r\n\r\n        function flattenElements(items: element[] | undefined) {\r\n            if (items != undefined) {\r\n                items.forEach(item => {\r\n                    flattenElements(item.items);\r\n                    formObjsTreeFlattend.push(item);\r\n                });\r\n            }\r\n        }\r\n        flattenElements(this.objsTree);\r\n\r\n        return formObjsTreeFlattend;\r\n    }\r\n}\r\n\r\nexport class ActionHelper implements action {\r\n    opts: { arguments: actionArgument[]; };\r\n    formID: string;\r\n    type: string;\r\n    deleted: number;\r\n    name: string;\r\n    id: string | number;\r\n\r\n    protected bildrCache: BildrCacheHelper;\r\n    private page: PageHelper | undefined;\r\n\r\n    public constructor(action: action, bildrCache: BildrCacheHelper) {\r\n        this.opts = action.opts;\r\n        this.formID = action.formID;\r\n        this.type = action.type;\r\n        this.deleted = action.deleted;\r\n        this.name = action.name;\r\n        this.id = action.id\r\n        this.bildrCache = bildrCache;\r\n    }\r\n    public get Page() {\r\n        if (!this.page) { this.page = this.bildrCache.pages.find(item => item.id == this.formID); }\r\n        return this.page;\r\n    }\r\n    public get Arguments() {\r\n        //check nodig? Array.isArray(action.Arguments\r\n        return this.opts.arguments\r\n    }\r\n\r\n}\r\n\r\nexport class FlowHelper extends ActionHelper {\r\n    public constructor(action: action, bildrCache: BildrCacheHelper) {\r\n        super(action, bildrCache);\r\n    }\r\n\r\n    public get Actions() {\r\n        let actionsArray = this.opts.arguments.find(item => item.name == \"actionsArray\");\r\n        let retValue = Array<ActionHelper>();\r\n\r\n        if (!actionsArray) return retValue;\r\n\r\n        let actArgActionsArray = actionsArray as actionArgumentActionsArray;\r\n\r\n        if (!actArgActionsArray.value) return retValue;\r\n\r\n        actArgActionsArray.value.forEach(actRef => {\r\n            let act = this.bildrCache.actionsGroupedByFormID[this.formID].find(act => act.id == actRef.id)\r\n            if (act) { retValue.push(act) }\r\n        });\r\n        return retValue;\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BildrToolsActions } from \"./Actions\";\r\nimport { BildrToolsActionTypes } from \"./ActionTypes\";\r\nimport { BildrToolsDebug } from \"./Debug\";\r\nimport { ActionsToShowEnum } from \"./Debug\";\r\nimport { BildrToolsFlows } from \"./Flows\";\r\n\r\nexport { BildrToolsActions as Actions, BildrToolsActionTypes as ActionTypes, BildrToolsFlows as Flows, BildrToolsDebug as Debug, ActionsToShowEnum };\r\n"],"names":[],"sourceRoot":""}