declare var brwFormRoot: brwForm, bildrCanvasEditMode: any;
declare function BrwObject(of: any, brwForm: brwForm, HTML: any): any;
declare function BrwFormObjsGarbageCollector(brwForm: any): void;
declare function BrwFormGarbageCollector(brwForm: any, brwObj: any, notFromParent: any): void;
declare var BrwFormAutoID: number;
declare function BrwForm(form: formInstance, pBrwObj: any): any;
declare function Form(id: string | number, name: string): any;
declare function FormGet(formID: any, grpForms: any): any;
declare function FormObjectsCreateTree(frm: any, withRefresh: any, types: any): void;
declare function FormGetFromCache(formID: any, bildrCache: any, qAct: any, forcedRefresh: any, forcedRefreshDetails: any, formNew: any, isThread: any): any;
declare function FormCheckIfNotNeedUpdate(bildrCache: any, form: any, postData: any): any;
declare function FormGetFromWebServer(form: any, onQAction: any, bildrCache: any, checkQueue: any, forcedVerify: any, lastFileModify: any): void;
declare function StaticDocGetPath(bildrCache: any, postData: any, sf: any): void;
declare function FormPreCache(pageIDs: any, qAct: any, forSelectedBildr: any): void;
declare function FormStart(formID: any, pBrwObj: any, jsonInput: any, actId: any, displayOnly: any, forcedRefresh: any, forcedRefreshDetails: any, forSelectedBildr: any, parentQAction: any, isOwnThread: any): any;
declare function getExtensionAction(msgId: string, messageData: any): any;
declare function FormParentApplyClassStyles(form: any, p: any): boolean;
declare function SaticFilesInfoGet(bildrCache: any, postData: any, qAct: any, toWeb: any): void;
declare function FormGetFunctions(bildrCache: any, qAct: any, isThread: any, forcedWait: any): boolean;
declare function StaticGetFromDB(qAct: any, bildrCache: any, onlyGrpsFrms: any): void;
declare function IsBildrCacheSelected(bildrCache: any): boolean;
declare function StaticRequestGroup(bildrCache: any, name: any, connName: any, sfName: any, qAct: any, requestDBGet: any, withWait: any, lastFileModify: any): boolean;
declare function GroupRemoveDiff(bildrCache: any, grp: any, newData: any, checkModify: any, recsToDiff: any): void;
declare function StaticReceiveGroup(bildrCache: any, grp: any, newData: any, checkModify: any, lastFileModify: any): void;
declare function StaticsToCache(list: any, bildrCache: any): void;
declare function addEventHandlers(targetObj: any, targetObjNode: any, eventList: any): void;
declare function handleBildrEvent(e: any): boolean;
